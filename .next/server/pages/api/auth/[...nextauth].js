"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].js":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"authOptions\": () => (/* binding */ authOptions),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n\n\nasync function refreshAccessToken(token) {\n    try {\n        const url = `${process.env.AWSAPIURL}/user/refreshToken`;\n        const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify({\n                userRefreshToken: token.cognitoRefreshToken\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        const refreshedTokens = await response.json();\n        if (!response.ok) {\n            throw refreshedTokens;\n        }\n        const newExpDate = Date.now() + refreshedTokens.expiresIn * 1000;\n        // console.log(\n        //   \"Token Refreshed! New Expiration Date: \",\n        //   new Date(newExpDate).toLocaleString(\"en-US\", {\n        //     timeZone: \"America/New_York\",\n        //   })\n        // );\n        return {\n            ...token,\n            cognitoTokenExpirationDate: newExpDate,\n            cognitoRefreshToken: refreshedTokens.refreshToken ?? token.cognitoRefreshToken,\n            cognitoAccessToken: refreshedTokens.newToken\n        };\n    } catch (error) {\n        //console.log(error);\n        return {\n            ...token,\n            error: \"RefreshAccessTokenError\"\n        };\n    }\n}\nconst authOptions = {\n    providers: [\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n            async authorize (credentials) {\n                const url = `${process.env.AWSAPIURL}/user/login`;\n                const response = await fetch(url, {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        email: credentials.email,\n                        oldPassword: credentials.password,\n                        newPassword: credentials.newPassword\n                    }),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n                const user = await response.json();\n                if (!user.success) {\n                    throw new Error(user.message);\n                }\n                return {\n                    user: user\n                };\n            }\n        })\n    ],\n    callbacks: {\n        async jwt ({ user , token  }) {\n            if (user) {\n                const tokenExpDate = Date.now() + user.user.cognitoExpirationDate * 1000;\n                // console.log(\n                //   \"cognito token expiration date: \",\n                //   new Date(tokenExpDate).toLocaleString(\"en-US\", {\n                //     timeZone: \"America/New_York\",\n                //   })\n                // );\n                return {\n                    cognitoAccessToken: user.user.token,\n                    cognitoRefreshToken: user.user.cognitoRefreshToken,\n                    cognitoExpirationTime: user.user.cognitoExpirationDate,\n                    cognitoTokenExpirationDate: tokenExpDate,\n                    cognitoEmail: user.user.email,\n                    userFirstName: user.user.firstName,\n                    userLastName: user.user.lastName,\n                    userRoleId: user.user.roleId,\n                    userRoleDescription: user.user.roleDescription\n                };\n            }\n            const currentDate = new Date(Date.now()).toLocaleString(\"en-US\", {\n                timeZone: \"America/New_York\"\n            });\n            // Return previous token if the access token has not expired yet\n            if (Date.now() < token.cognitoTokenExpirationDate) {\n                // console.log(\n                //   \"cognito token expiration date: \",\n                //   new Date(token.cognitoTokenExpirationDate).toLocaleString(\"en-US\", {\n                //     timeZone: \"America/New_York\",\n                //   })\n                // );\n                return token;\n            }\n            // console.log(\n            //   \"Token Expired... Date: \",\n            //   new Date(token.cognitoTokenExpirationDate).toLocaleString(\"en-US\", {\n            //     timeZone: \"America/New_York\",\n            //   })\n            // );\n            // Access token has expired, try to update it\n            return refreshAccessToken(token);\n        },\n        async session ({ session , token , user  }) {\n            session.cognitoAccessToken = token.cognitoAccessToken;\n            session.cognitoRefreshToken = token.cognitoRefreshToken;\n            session.cognitoExpirationTime = token.cognitoExpirationTime;\n            session.user.email = token.cognitoEmail;\n            session.user.firstName = token.userFirstName;\n            session.user.lastName = token.userLastName;\n            session.user.roleId = token.userRoleId;\n            session.user.roleDescription = token.userRoleDescription;\n            //console.log(session);\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    },\n    session: {\n        maxAge: 3600\n    },\n    secret: \"LATHwYc2MptPEW/kYXhIZioo9jrWsyCKy+QSa313K7Q=\",\n    trustHost: true\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/auth/[...nextauth].js"));
module.exports = __webpack_exports__;

})();